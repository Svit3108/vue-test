apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mychart.fullname" . }}-postgres
  labels:
  {{- include "mychart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: postgres
    {{- include "mychart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: postgres
      {{- include "mychart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          value: {{ quote .Values.postgres.postgres.env.postgresUser }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: app-secret
        - name: POSTGRES_DB
          value: {{ quote .Values.postgres.postgres.env.postgresDb }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.postgres.postgres.image.repository }}:{{ .Values.postgres.postgres.image.tag
          | default .Chart.AppVersion }}
        name: postgres
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pgdata
        - mountPath: /docker-entrypoint-initdb.d
          name: init-db
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: {{ include "mychart.fullname" . }}-pvc
      - configMap:
          name: {{ include "mychart.fullname" . }}-init-sql
        name: init-db